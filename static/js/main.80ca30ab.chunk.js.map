{"version":3,"sources":["Homepage.js","App.js","serviceWorker.js","index.js"],"names":["loves","colors","Homepage","props","colorChange","state","colorIndex","loveIndex","lastTime","Date","valueOf","length","setState","color","love","randAnimation","element","animation","Math","floor","random","blogLine","animationType","githubLine","linkedInLine","resumeLine","contactLine","clearAnimation","this","id","style","backgroundColor","onMouseMove","href","onMouseEnter","onMouseLeave","type","animationDuration","strokeWidth","show","target","rel","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.80ca30ab.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { RoughNotation } from \"react-rough-notation\";\nimport './Homepage.css';\n\nconst loves = [\n  'I ❤️ Magic the Gathering'\n, 'I ❤️ competitive at-home Jeopardy'\n, 'I ❤️ ancient mythologies'\n, 'I ❤️ new music fridays'\n, 'I ❤️ obtuse philosophy'\n, 'I ❤️ being a Pathfinder nerd'\n, 'I ❤️ my little sister'\n, 'I ❤️ biographies of genius'\n, 'I ❤️ chicken wings'\n, 'I ❤️ Modest Mouse'\n, 'I ❤️ Good Eats'\n, 'I ❤️ Going to art museums'\n, 'I ❤️ Cards Against Humanity'\n, 'I ❤️ WTF with Marc Maron'\n, 'I ❤️ finishing a good book'\n, 'I ❤️ brain breaking physics'\n, 'I ❤️ watching Tiny Desk Concerts'\n, 'I ❤️ a creamy milk stout'\n, 'I ❤️ Friedrich Nietzsche'\n, 'I ❤️ failing fast'\n, 'I ❤️ the Beatles'\n, 'I ❤️ biking in the city'\n, 'I ❤️ building with Legos'\n, 'I ❤️ trying new things'\n, 'I ❤️ Anthony Bourdain (RIP)'\n, 'I ❤️ the movie Amadeus'\n, 'I ❤️ fat stacks of cash'\n, 'I ❤️ Civilization by Sid Meier'\n, 'I ❤️ a medium rare rack of lamb'\n, 'I ❤️ sour & funky beers'\n, 'I ❤️ stand up comedy'\n, 'I ❤️ Led Zeppelin'\n, 'I ❤️ finding the right words'\n, 'I ❤️ a well matched debate'\n, 'I ❤️ films by Quentin Terantino'\n, 'I ❤️ chicken & waffles'\n, 'I ❤️ working with creative people'\n, 'I ❤️ watching TED talks'\n, 'I ❤️ discovering San Diego'\n, 'I ❤️ the XX'\n, 'I ❤️ the color yellow'\n, 'I ❤️ cryptozoology'\n, 'I ❤️ spicy tuna sushi'\n, 'I ❤️ Tyler the Creator'\n, 'I ❤️ crazy entrepreneurs'\n, 'I ❤️ YouTube University'\n, 'I ❤️ questioning authority'\n, 'I ❤️ strong coffee'\n, 'I ❤️ the Strokes'\n, 'I ❤️ sriracha on hotdogs'\n, 'I ❤️ paintings by Dali'\n, 'I ❤️ (insert something interesting here)'\n, 'I ❤️ a well designed UX'\n]\n\nconst colors = [\n      `#F0B83C`, `#F1C246`, `#F3CD4F`, `#F4D759`\n    , `#F5E163`, `#EEDE5B`, `#E7DB54`, `#E0D84C`\n    , `#D9D544`, `#cbd342`, `#bdd13f`, `#aece3d`\n    , `#A0CC3B`, `#9bcb48`, `#95ca56`, `#90c964`\n    , `#8AC871`, `#7fc572`, `#74c373`, `#69c074`\n    , `#5EBD75`, `#47bb7b`, `#2fb981`, `#18b788`\n    , `#00B58E`, `#00b19a`, `#00aea7`, `#00aab3`\n    , `#00A6BF`, `#00a1b9`, `#009bb3`, `#0095ac`\n    , `#0090A6`, `#0090A6`, `#0095ac`, `#009bb3`\n    , `#00a1b9`, `#00A6BF`, `#00aab3`, `#00A6BF`\n    , `#00aab3`, `#00aea7`, `#00b19a`, `#00B58E`\n    , `#18b788`, `#2fb981`, `#47bb7b`, `#5EBD75`\n    , `#69c074`, `#74c373`, `#7fc572`, `#8AC871`\n    , `#90c964`, `#95ca56`, `#9bcb48`, `#A0CC3B`\n    , `#aece3d`, `#bdd13f`, `#cbd342`, `#D9D544`\n    , `#E0D84C`, `#E7DB54`, `#EEDE5B`, `#F5E163`\n    , `#F4D759`, `#F3CD4F`, `#F1C246`\n]\n\nclass Homepage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            color: `#F0B83C`,\n            colorIndex: 0,\n            love: `I ❤️ Magic the Gathering`,\n            loveIndex: 0,\n            lastTime: 0,\n            blogLine: false,\n            githubLine: false,\n            linkedInLine: false,\n            resumeLine: false,\n            contactLine: false,\n            animationType: \"underline\"\n        }\n    }\n\n    colorChange = () => {\n        var { colorIndex, loveIndex, lastTime } = this.state\n        var curTime = new Date().valueOf()\n        if (curTime - 250 >= lastTime) {\n            lastTime = new Date().valueOf()\n            colorIndex = colorIndex + 1\n            if (colorIndex >= colors.length) { colorIndex = 0 }\n            loveIndex = loveIndex + 1\n            if (loveIndex >= loves.length) { loveIndex = 0 }\n            this.setState({ \n                color: colors[colorIndex], \n                colorIndex: colorIndex,\n                love: loves[loveIndex],\n                loveIndex: loveIndex,\n                lastTime: lastTime\n            })\n        }\n    }\n\n    randAnimation = (element) => {\n        const animationTypes = [\"underline\", \"box\", \"circle\"]\n        var randNumber = Math.floor(Math.random() * 3)\n        var animation = animationTypes[randNumber]\n        switch (element) {\n            case \"blog\":\n                this.setState({ blogLine: true, animationType: animation })\n                break;\n            case \"github\":\n                this.setState({ githubLine: true, animationType: animation })\n                break;\n            case \"linkedIn\":\n                this.setState({ linkedInLine: true, animationType: animation })\n                break;\n            case \"resume\":\n                this.setState({ resumeLine: true, animationType: animation })\n                break;\n            case \"contact\":\n                this.setState({ contactLine: true, animationType: animation })\n                break;\n            default:\n                this.setState({ animationType: animation})\n        }\n\n    }\n\n    clearAnimation = () => {\n        this.setState({ \n            blogLine: false, \n            githubLine: false, \n            linkedInLine: false, \n            resumeLine: false, \n            contactLine: false\n        })\n    }\n\n    render() {\n        const { color, \n                love, \n                blogLine, \n                githubLine, \n                linkedInLine, \n                resumeLine, \n                contactLine, \n                animationType } = this.state\n\n        return (\n            <div id=\"bigColor\" style={{ backgroundColor: color }} onMouseMove={ this.colorChange }>\n                <div id=\"textBody\">\n                    <h1>hi i'm jake!</h1>\n                    <h4>I'm a fullstack developer living in sunny San Diego. Currently drinking too much coffee, learning Python, & getting excited about AI. Open to new projects & opportunities!</h4>\n                    <h4>{ love }</h4>\n                    <div id=\"homeLinks\">\n                        <a  href=\"www.google.com\" \n                            onMouseEnter={() => this.randAnimation(\"blog\")} \n                            onMouseLeave={() => this.clearAnimation(\"blog\")}>\n                            <RoughNotation type={ animationType } \n                                animationDuration=\"1200\" \n                                strokeWidth=\"3\" \n                                show={ blogLine }>\n                                    blog\n                            </RoughNotation>\n                        </a>\n                        <a  href=\"https://github.com/JakeRoyRandall\" target=\"_blank\" rel=\"noopener noreferrer\" \n                            onMouseEnter={() => this.randAnimation(\"github\")}\n                            onMouseLeave={() => this.clearAnimation(\"github\")}>\n                            <RoughNotation type={ animationType } \n                                animationDuration=\"1200\" \n                                strokeWidth=\"3\" \n                                show={ githubLine }>\n                                    github\n                            </RoughNotation>\n                        </a>\n                        <a  href=\"https://www.linkedin.com/in/jake-r-randall\" target=\"_blank\" rel=\"noopener noreferrer\" \n                            onMouseEnter={() => this.randAnimation(\"linkedIn\")} \n                            onMouseLeave={() => this.clearAnimation(\"linkedIn\")}>\n                            <RoughNotation type={ animationType }\n                                animationDuration=\"1200\" \n                                strokeWidth=\"3\"  \n                                show={ linkedInLine }>\n                                    linkedIn\n                            </RoughNotation>\n                        </a>\n                        <a  href=\"https://jakeroyrandall.github.io/JakeRandallResume.pdf\" target=\"_blank\"\n                            onMouseEnter={() => this.randAnimation(\"resume\")}\n                            onMouseLeave={() => this.clearAnimation(\"resume\")}>\n                            <RoughNotation type={ animationType }\n                                animationDuration=\"1200\" \n                                strokeWidth=\"3\" \n                                show={ resumeLine }>\n                                    resume\n                            </RoughNotation>\n                        </a>\n                        <a  href=\"mailto:hello@jakerandall.me?subject=Website%20Contact\" target=\"_blank\" rel=\"noopener noreferrer\"\n                            onMouseEnter={() => this.randAnimation(\"contact\")}\n                            onMouseLeave={() => this.clearAnimation(\"contact\")}>\n                            <RoughNotation type={ animationType }\n                                animationDuration=\"1200\" \n                                strokeWidth=\"3\" \n                                show={ contactLine} >\n                                    contact\n                            </RoughNotation>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Homepage\n","import React, { Component } from 'react';\nimport Homepage from './Homepage';\n\nclass App extends Component {\n  render () {\n    return (\n      <div>\n        <Homepage />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}